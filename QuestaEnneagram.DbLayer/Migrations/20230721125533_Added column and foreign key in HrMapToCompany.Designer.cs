// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestaEnneagram.DbLayer;

#nullable disable

namespace QuestaEnneagram.DbLayer.Migrations
{
    [DbContext(typeof(QuestaDbContext))]
    [Migration("20230721125533_Added column and foreign key in HrMapToCompany")]
    partial class AddedcolumnandforeignkeyinHrMapToCompany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbAgeModel", b =>
                {
                    b.Property<int>("AgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgeId"), 1L, 1);

                    b.Property<string>("AgeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("AgeId");

                    b.ToTable("mstAge", (string)null);

                    b.HasData(
                        new
                        {
                            AgeId = 1,
                            AgeName = "18-21",
                            IsActive = false
                        },
                        new
                        {
                            AgeId = 2,
                            AgeName = "22-24",
                            IsActive = false
                        },
                        new
                        {
                            AgeId = 3,
                            AgeName = "25-34",
                            IsActive = false
                        },
                        new
                        {
                            AgeId = 4,
                            AgeName = "35-44",
                            IsActive = false
                        },
                        new
                        {
                            AgeId = 5,
                            AgeName = "45-54",
                            IsActive = false
                        },
                        new
                        {
                            AgeId = 6,
                            AgeName = "55-64",
                            IsActive = false
                        },
                        new
                        {
                            AgeId = 7,
                            AgeName = "65-74",
                            IsActive = false
                        },
                        new
                        {
                            AgeId = 8,
                            AgeName = "75 and above",
                            IsActive = false
                        });
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModel", b =>
                {
                    b.Property<int>("AssessmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessmentId"), 1L, 1);

                    b.Property<string>("AssessmentName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TotalQuestion")
                        .HasColumnType("int");

                    b.HasKey("AssessmentId");

                    b.ToTable("mstAssessmentSet");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModuleModel", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuleId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PartialModuleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ModuleId");

                    b.ToTable("mstAssessmentModule");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbAttachSetToModuleModel", b =>
                {
                    b.Property<int>("SetToModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SetToModuleId"), 1L, 1);

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("SetToModuleId");

                    b.HasIndex("AssessmentId");

                    b.HasIndex("ModuleId");

                    b.ToTable("TxnAttachSetToModule");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbCandidateModel", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CandidateId"), 1L, 1);

                    b.Property<int>("AgeId")
                        .HasColumnType("int");

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<string>("BrowserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CMapHId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("EmployeeStatusId")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("HrMapToCompaniesCMapHId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsConnectedViaDesktop")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsConnectedViaMobile")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsConnectedViaTab")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLogin")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOTPRequire")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MainType")
                        .HasColumnType("int");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProfessionalId")
                        .HasColumnType("int");

                    b.Property<int>("QualificationId")
                        .HasColumnType("int");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CandidateId");

                    b.HasIndex("AgeId");

                    b.HasIndex("AssessmentId");

                    b.HasIndex("CountryId");

                    b.HasIndex("EmployeeStatusId");

                    b.HasIndex("ExperienceId");

                    b.HasIndex("GenderId");

                    b.HasIndex("HrMapToCompaniesCMapHId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("ProfessionalId");

                    b.HasIndex("QualificationId");

                    b.HasIndex("StateId");

                    b.ToTable("txnCandidate");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbCandidateTestDetailModel", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestId"), 10000L, 1);

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TestId");

                    b.HasIndex("CandidateId");

                    b.ToTable("txnCandidateTestDetails");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbCompanyModel", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CompanyId");

                    b.ToTable("mstCompany");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbConfigModel", b =>
                {
                    b.Property<int>("ConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfigId"), 1L, 1);

                    b.Property<string>("ConfigName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("ConfigId");

                    b.ToTable("MstConfig");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbCountryModel", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("CountryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("CountryId");

                    b.ToTable("mstCountry");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbEmployeeStatusModel", b =>
                {
                    b.Property<int>("EmploymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmploymentId"), 1L, 1);

                    b.Property<string>("EmploymentName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("EmploymentId");

                    b.ToTable("mstEmployeeStatus");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbExperenceModel", b =>
                {
                    b.Property<int>("ExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExperienceId"), 1L, 1);

                    b.Property<string>("ExperenceName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("ExperienceId");

                    b.ToTable("mstExperence");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbGenderModel", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"), 1L, 1);

                    b.Property<string>("GenderName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("GenderId");

                    b.ToTable("mstGender");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbHrMapToCompanyModel", b =>
                {
                    b.Property<int>("CMapHId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CMapHId"), 1L, 1);

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CountOfLink")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("FinalMailId")
                        .HasColumnType("int");

                    b.Property<int>("HrId")
                        .HasColumnType("int");

                    b.Property<int?>("InitialMailId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBulkLinkGenerationReq")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReportSentToCandidate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReportSentToHr")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CMapHId");

                    b.HasIndex("AssessmentId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("HrId");

                    b.ToTable("TxnHrMapToCompany");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbHumanResourceModel", b =>
                {
                    b.Property<int>("HrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HrId"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HrEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HrMobileNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HrName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("HrId");

                    b.HasIndex("CompanyId");

                    b.ToTable("mstHumanResource");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbIndustryModel", b =>
                {
                    b.Property<int>("IndustryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IndustryId"), 1L, 1);

                    b.Property<string>("IndustryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("IndustryId");

                    b.ToTable("mstIndustry");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbMaritalStatusModel", b =>
                {
                    b.Property<int>("MaritalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaritalId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MaritalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaritalId");

                    b.ToTable("mstMaritalStatus");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbModuleWiseStatusModel", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.HasKey("ExamId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("TestId");

                    b.ToTable("txnModuleWiseStatus");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbProfessionalModel", b =>
                {
                    b.Property<int>("ProfessionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessionalId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProfessionalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProfessionalId");

                    b.ToTable("mstProfessional");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQualificationModel", b =>
                {
                    b.Property<int>("QualificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QualificationId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("QualificationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("QualificationId");

                    b.ToTable("mstQualification");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionModel", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponseTypeId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ResponseTypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("mstQuestion");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionReponseType", b =>
                {
                    b.Property<int>("ResponseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResponseTypeId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ResponseTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ResponseTypeId");

                    b.ToTable("mstQuestionReponseType");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionResponseModel", b =>
                {
                    b.Property<int>("ResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResponseId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResponseNumber")
                        .HasColumnType("int");

                    b.Property<string>("ResponseText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubTypeId")
                        .HasColumnType("int");

                    b.Property<int>("weight")
                        .HasColumnType("int");

                    b.HasKey("ResponseId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SubTypeId");

                    b.ToTable("mstQuestionResponse");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionSubTypeModel", b =>
                {
                    b.Property<int>("SubTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubTypeId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SubTypeId");

                    b.ToTable("mstQuestionSubType");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionTypeModel", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TypeId");

                    b.ToTable("mstQuestionType");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbStateModel", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StateName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("mstState");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbTransactionQuestionModel", b =>
                {
                    b.Property<int>("TxnQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TxnQuestionId"), 1L, 1);

                    b.Property<int?>("ImpactScore")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAnswer")
                        .HasColumnType("bit");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ResponseAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ResponseBy")
                        .HasColumnType("int");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.HasKey("TxnQuestionId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("TestId");

                    b.ToTable("txnQuestion");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbTransactionQuestionResponseModel", b =>
                {
                    b.Property<int>("TestQuestionResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestQuestionResponseId"), 1L, 1);

                    b.Property<int?>("DbAssessmentModuleModelModuleId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.Property<int>("TestId")
                        .HasColumnType("int");

                    b.Property<int>("TxnQuestionId")
                        .HasColumnType("int");

                    b.HasKey("TestQuestionResponseId");

                    b.HasIndex("DbAssessmentModuleModelModuleId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("ResponseId");

                    b.HasIndex("TestId");

                    b.HasIndex("TxnQuestionId");

                    b.ToTable("txnQuestionResponse");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbTxnIndustryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CandidateId")
                        .HasColumnType("int");

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("IndustryId");

                    b.ToTable("txnIndustry");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbAttachSetToModuleModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModel", "Assessment")
                        .WithMany("AttachSetToModules")
                        .HasForeignKey("AssessmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModuleModel", "AssessmentModules")
                        .WithMany("AttachSetToModules")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assessment");

                    b.Navigation("AssessmentModules");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbCandidateModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbAgeModel", "Age")
                        .WithMany("Candidates")
                        .HasForeignKey("AgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModel", "Assessment")
                        .WithMany("Candidates")
                        .HasForeignKey("AssessmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbCountryModel", "Country")
                        .WithMany("Candidates")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbEmployeeStatusModel", "EmployeeStatus")
                        .WithMany("Candidates")
                        .HasForeignKey("EmployeeStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbExperenceModel", "Experience")
                        .WithMany("Candidates")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbGenderModel", "Gender")
                        .WithMany("Candidates")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbHrMapToCompanyModel", "HrMapToCompanies")
                        .WithMany("Candidates")
                        .HasForeignKey("HrMapToCompaniesCMapHId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbMaritalStatusModel", "MaritalStatus")
                        .WithMany("Candidates")
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbProfessionalModel", "Professional")
                        .WithMany("Candidates")
                        .HasForeignKey("ProfessionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbQualificationModel", "Qualification")
                        .WithMany("Candidates")
                        .HasForeignKey("QualificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbStateModel", "State")
                        .WithMany("Candidates")
                        .HasForeignKey("StateId")
                        .IsRequired();

                    b.Navigation("Age");

                    b.Navigation("Assessment");

                    b.Navigation("Country");

                    b.Navigation("EmployeeStatus");

                    b.Navigation("Experience");

                    b.Navigation("Gender");

                    b.Navigation("HrMapToCompanies");

                    b.Navigation("MaritalStatus");

                    b.Navigation("Professional");

                    b.Navigation("Qualification");

                    b.Navigation("State");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbCandidateTestDetailModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbCandidateModel", "Candidate")
                        .WithMany("CandidateTestDetails")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbHrMapToCompanyModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModel", "dbAssessmentModel")
                        .WithMany("dbHrMapToCompanyModels")
                        .HasForeignKey("AssessmentId")
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbCompanyModel", "Company")
                        .WithMany("HrMapToCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbHumanResourceModel", "HumanResource")
                        .WithMany("HrMapToCompanies")
                        .HasForeignKey("HrId")
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("HumanResource");

                    b.Navigation("dbAssessmentModel");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbHumanResourceModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbCompanyModel", "Company")
                        .WithMany("HumanResources")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbModuleWiseStatusModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModuleModel", "AssessmentModules")
                        .WithMany("ModuleWiseStatus")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbCandidateTestDetailModel", "CandidateTestDetails")
                        .WithMany("ModuleWiseStatus")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssessmentModules");

                    b.Navigation("CandidateTestDetails");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModuleModel", "AssessmentModuleModel")
                        .WithMany("QuestionModels")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbQuestionReponseType", "QuestionReponseType")
                        .WithMany("QuestionModels")
                        .HasForeignKey("ResponseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbQuestionTypeModel", "QuestionTypeModels")
                        .WithMany("QuestionModels")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssessmentModuleModel");

                    b.Navigation("QuestionReponseType");

                    b.Navigation("QuestionTypeModels");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionResponseModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbQuestionModel", "QuestionModel")
                        .WithMany("QuestionResponseModels")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbQuestionSubTypeModel", "dbQuestionSubTypeModel")
                        .WithMany("QuestionResponseModel")
                        .HasForeignKey("SubTypeId");

                    b.Navigation("QuestionModel");

                    b.Navigation("dbQuestionSubTypeModel");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbStateModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbCountryModel", "Country")
                        .WithMany("states")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbTransactionQuestionModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModuleModel", "AssessmentModuleModel")
                        .WithMany("transactionQuestions")
                        .HasForeignKey("ModuleId")
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbQuestionModel", "QuestionModel")
                        .WithMany("transactionQuestions")
                        .HasForeignKey("QuestionId")
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbCandidateTestDetailModel", "CandidateTestDetailModel")
                        .WithMany("transactionQuestions")
                        .HasForeignKey("TestId")
                        .IsRequired();

                    b.Navigation("AssessmentModuleModel");

                    b.Navigation("CandidateTestDetailModel");

                    b.Navigation("QuestionModel");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbTransactionQuestionResponseModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModuleModel", null)
                        .WithMany("TransactionQuestionResponses")
                        .HasForeignKey("DbAssessmentModuleModelModuleId");

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbQuestionModel", "QuestionModel")
                        .WithMany("transactionQuestionResponses")
                        .HasForeignKey("QuestionId")
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbQuestionResponseModel", "QuestionResponseModel")
                        .WithMany("transactionQuestionResponses")
                        .HasForeignKey("ResponseId")
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbCandidateTestDetailModel", "CandidateTestDetailModel")
                        .WithMany("transactionQuestionResponses")
                        .HasForeignKey("TestId")
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbTransactionQuestionModel", "transactionQuestion")
                        .WithMany("transactionQuestionResponses")
                        .HasForeignKey("TxnQuestionId")
                        .IsRequired();

                    b.Navigation("CandidateTestDetailModel");

                    b.Navigation("QuestionModel");

                    b.Navigation("QuestionResponseModel");

                    b.Navigation("transactionQuestion");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbTxnIndustryModel", b =>
                {
                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbCandidateModel", "Candidate")
                        .WithMany("Industries")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestaEnneagram.DbLayer.DBModel.DbIndustryModel", "Industry")
                        .WithMany("Industry")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbAgeModel", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModel", b =>
                {
                    b.Navigation("AttachSetToModules");

                    b.Navigation("Candidates");

                    b.Navigation("dbHrMapToCompanyModels");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbAssessmentModuleModel", b =>
                {
                    b.Navigation("AttachSetToModules");

                    b.Navigation("ModuleWiseStatus");

                    b.Navigation("QuestionModels");

                    b.Navigation("TransactionQuestionResponses");

                    b.Navigation("transactionQuestions");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbCandidateModel", b =>
                {
                    b.Navigation("CandidateTestDetails");

                    b.Navigation("Industries");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbCandidateTestDetailModel", b =>
                {
                    b.Navigation("ModuleWiseStatus");

                    b.Navigation("transactionQuestionResponses");

                    b.Navigation("transactionQuestions");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbCompanyModel", b =>
                {
                    b.Navigation("HrMapToCompanies");

                    b.Navigation("HumanResources");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbCountryModel", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("states");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbEmployeeStatusModel", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbExperenceModel", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbGenderModel", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbHrMapToCompanyModel", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbHumanResourceModel", b =>
                {
                    b.Navigation("HrMapToCompanies");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbIndustryModel", b =>
                {
                    b.Navigation("Industry");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbMaritalStatusModel", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbProfessionalModel", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQualificationModel", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionModel", b =>
                {
                    b.Navigation("QuestionResponseModels");

                    b.Navigation("transactionQuestionResponses");

                    b.Navigation("transactionQuestions");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionReponseType", b =>
                {
                    b.Navigation("QuestionModels");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionResponseModel", b =>
                {
                    b.Navigation("transactionQuestionResponses");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionSubTypeModel", b =>
                {
                    b.Navigation("QuestionResponseModel");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbQuestionTypeModel", b =>
                {
                    b.Navigation("QuestionModels");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbStateModel", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("QuestaEnneagram.DbLayer.DBModel.DbTransactionQuestionModel", b =>
                {
                    b.Navigation("transactionQuestionResponses");
                });
#pragma warning restore 612, 618
        }
    }
}
